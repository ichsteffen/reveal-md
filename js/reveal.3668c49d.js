(function(e){function n(n){for(var a,i,r=n[0],l=n[1],d=n[2],p=0,h=[];p<r.length;p++)i=r[p],Object.prototype.hasOwnProperty.call(s,i)&&s[i]&&h.push(s[i][0]),s[i]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(e[a]=l[a]);c&&c(n);while(h.length)h.shift()();return o.push.apply(o,d||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],a=!0,r=1;r<t.length;r++){var l=t[r];0!==s[l]&&(a=!1)}a&&(o.splice(n--,1),e=i(i.s=t[0]))}return e}var a={},s={reveal:0},o=[];function i(n){if(a[n])return a[n].exports;var t=a[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,i),t.l=!0,t.exports}i.m=e,i.c=a,i.d=function(e,n,t){i.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},i.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,n){if(1&n&&(e=i(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(i.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var a in e)i.d(t,a,function(n){return e[n]}.bind(null,a));return t},i.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return i.d(n,"a",n),n},i.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},i.p="/reveal-md/";var r=window["webpackJsonp"]=window["webpackJsonp"]||[],l=r.push.bind(r);r.push=n,r=r.slice();for(var d=0;d<r.length;d++)n(r[d]);var c=l;o.push([2,"chunk-vendors"]),t()})({2:function(e,n,t){e.exports=t("dd15")},3:function(e,n){},4:function(e,n){},"4fe4":function(e,n){function t(e){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}t.keys=function(){return[]},t.resolve=t,e.exports=t,t.id="4fe4"},"7b96":function(e,n,t){},dd15:function(e,n,t){"use strict";t.r(n);var a=t("9ab4"),s=(t("7b96"),t("1beb")),o=t("8e5d"),i=t.n(o),r=t("5fc2"),l=t.n(r),d=t("26b9"),c=t.n(d);const p={css:["css/reveal.css"],js:["js/reveal.js",{async:!0,src:"plugin/highlight/highlight.js"}]};class h{constructor(e={},n={}){this.revealMdOptions=e,this.raw=[[]],this.queue={ready:[]},this.cdn="https://cdn.jsdelivr.net/npm/reveal.js@3.8.0/",this._headers={},this.revealOptions=JSON.parse(JSON.stringify(p)),this.cdn=e.cdn||this.cdn,n.css&&this.revealOptions.css.push(...n.css),n.js&&this.revealOptions.js.push(...n.js),this.mdConverter=new i.a.Converter,this.mdConverter.setFlavor("github"),e.markdown&&e.markdown.forEach(e=>this.mdConverter.addExtension(e));const t={markdown:e=>{return this.mdConverter.makeHtml(e)},...e.pug||{}};this.pugConverter=s["a"].compile({filters:t}),window.revealMd=this;for(const a of this.revealOptions.css)document.body.appendChild(Object.assign(document.createElement("link"),{class:"reveal-css",href:this.cdn+a,rel:"stylesheet",type:"text/css"}));document.body.appendChild(Object.assign(document.createElement("link"),{id:"reveal-theme",class:"reveal-css",href:this.cdn+"css/theme/white.css",rel:"stylesheet",type:"text/css"}));for(let a of this.revealOptions.js)if("string"===typeof a)document.body.appendChild(Object.assign(document.createElement("script"),{class:"reveal-js",type:"text/javascript",src:this.cdn+a}));else{const{async:e,src:n}=a;document.body.appendChild(Object.assign(document.createElement("script"),{class:"reveal-js",async:e,type:"text/javascript",src:this.cdn+n}))}window.addEventListener("load",()=>{const e=window.Reveal;e&&(e.initialize(),this.onReady(()=>{this.queue.ready.length>0&&(this.queue.ready.forEach(n=>n(e)),e.slide(-1,-1,-1),e.sync())}))})}getHeaders(){return this._headers}setHeaders(e){this.onReady(n=>{e.theme&&(document.getElementById("reveal-theme").href=this.cdn+`css/theme/${e.theme}.css`),Array.from(document.getElementsByClassName("reveal-css")).forEach(e=>{const n=e;n.href.startsWith(this.cdn)||(n.href=this.cdn+n.href)}),Array.from(document.getElementsByClassName("reveal-js")).forEach(e=>{const n=e;n.src.startsWith(this.cdn)||(n.src=this.cdn+n.src)}),n&&n.configure(e)}),this._headers=e}update(e){const{data:n,content:t}=c()(e);this.setHeaders(n);const a=()=>{let e=0;const n=t.split(/\r?\n===\r?\n/g).map((n,t)=>{const a=this.parseSlide(n);if(a.comment){const n=a.comment.split("\n"),t=n[0];if(["hidden","global"].includes(t)){if("global"===t){const e=document.getElementById("global");e&&(e.innerHTML=a.content)}return e++,null}}return t-=e,this.raw[t]=this.raw[t]||[],n.split(/\r?\n--\r?\n/g).map((e,n)=>{const a=this.parseSlide(e);if(!this.raw[t][n]||this.raw[t][n]&&this.raw[t][n].raw!==e){const e=document.createElement("div");e.className="container",e.innerHTML=a.content;let s=this.getSlide(t,n),o=this.getSlide(t);if(o&&s){const n=s.getElementsByClassName("container");Array.from(n).forEach(e=>e.remove()),s.appendChild(e)}else{const n=document.createElement("section");if(n.append(e),o)o.appendChild(n);else{const e=document.createElement("section");e.append(n),document.querySelector(".reveal .slides").appendChild(e)}}Array.from(e.querySelectorAll("pre code:not(.hljs)")).forEach(e=>{window.hljs&&window.hljs.highlightBlock(e)})}return a})}).filter(e=>null!==e);this.raw.map((e,t)=>{if(e.map((a,s)=>{const o=e.length-s-1;if(!n[t]||!n[t][o]){const e=this.getSlide(t,o);e&&e.remove()}}),!n[t]){const e=this.getSlide(t);e&&e.remove()}}),this.raw=n};a()}onReady(e){const n=window.Reveal;n&&n.isReady()?e(n):this.queue.ready.push(e)}once(e,n){const t=window.Reveal;if(t&&t.isReady){const a=()=>{n(),t.removeEventListener(e,a)};t.addEventListener(e,a)}else this.queue.ready.push(n)}parseSlide(e){const n=e;let t="";const a=[],s=[];let o=!0;for(const l of e.split("\n")){if(o=!0,0===s.length&&l.startsWith("// ")&&(a.push(l.substr(3)),o=!1),t&&l.startsWith("```"))break;0===s.length&&l.startsWith("```")&&(t=l.substr(3),o=!1),o&&s.push(l)}t=t||"markdown";const i=a.join("\n");let r=s.join("\n")||e;switch(t){case"markdown":r=this.mdConverter.makeHtml(r);break;case"html":break;case"pug":r=this.pugConverter(r);break;default:const e=l()("pre");e.innerText=r,r=e.outerHTML}return{lang:t,comment:i,content:r,raw:n}}buildSlide(e){const n=[];if(e.comment)for(const a of e.comment.split("\n"))n.push(`// ${a}`);const t="```";"markdown"!==e.lang&&n.push(`${t}${e.lang||"html"}`);for(const a of e.content.split("\n"))n.push(a);return"markdown"!==e.lang&&n.push(t),n.join("\n")}getSlide(e,n){const t=document.querySelectorAll(".slides > section"),a=t[e];return"number"===typeof n?a?Array.from(a.children).filter(e=>"SECTION"===e.tagName.toLocaleUpperCase())[n]:void 0:a}}var m,u,g=h,b=Object({NODE_ENV:"production",VUE_APP_PLACEHOLDER:"---\n# Yaml front matter is allowed.\ntitle: reveal-md\ntheme: solarized  # try solarized, serif or white\n---\n// global\n```pug\nstyle.\n  h1, h2, h3, h4, h5, h6 {\n    text-transform: uppercase !important;\n  }\n  \n  p, li {\n    font-size: 2rem;\n  }\n  \n  code {\n    color: red;\n  }\n```\n===\n\n# Reveal-MD\n\nReveal.js x Markdown (Showdown.js) editor and CLI.\n\n--\n\n- Customizable by editing [/src/reveal.ts](/src/reveal.ts), and add your Showdown / HyperPug plugins here. You might use <https://github.com/patarapolw/indented-filter> to create plugins.\n\n--\n\n- Global scripting `<script><\/script>` and styling `<style></style>` is also supported in slides marked with\n\n```markdown\n// global\ncontent (Pug or HTML or extended Markdown)\n```\n\n- The slides marked with `// global` or `// hidden` will be hidden.\n\n--\n\nHTML is also supported\n\n--\n```html\n<small>Small character</small>\n```\n\n===\n\n## Installation\n\n```\ngit init\ngit submodule add https://github.com/patarapolw/reveal-md.git\nnpm i ./reveal-md\n```\n\n--\n\nOr simply (but you won't be able to edit it.)\n\n```\nnpm i https://github.com/patarapolw/reveal-md.git\n```\n\n===\n\n## Usage\n\n```\nreveal-md [options] <filename>\n\nRead file in reveal-md\n\nPositionals:\n  filename  Path to the file to read\n\nOptions:\n  --version     Show version number                                    [boolean]\n  --edit, -e    Edit the file in editor                                [boolean]\n  --media, -m   Path to media folder                                    [string]\n  --plugin, -p  Path to plugin folder                                   [string]\n  --no-media    No media should be loaded                              [boolean]\n  --no-plugin   No plugin should be loaded                             [boolean]\n  --help        Show help                                              [boolean]\n```\n\n===\n\n## Adding media to reveal-md\n\nBy default, media can be put in the folder `media/` alongside the `*.md` file. The media can be referenced using the URL `/media/<FILENAME>`. Can be disabled using `--no-media` flag.\n\n===\n\n## Adding plugins to reveal-md\n\nAlso `plugin/` folder alongside `*.md` file will be loaded. Can be disabled using `--no-plugin` flag. For example, see <https://github.com/patarapolw/flatsrs>\n\n===\n\n## Save as HTML (and associated assets folder)\n\nThis is best done by [downloading complete web page, in associated web browser](https://www.makeuseof.com/tag/save-complete-webpage-offline-reading/).\n\nUsing web crawlers, like <https://github.com/website-scraper/node-website-scraper> won't work, because some JavaScript in Reveal.js is dynamically injected.\n\n===\n\n## Online viewer\n\nYou can do it at <https://patarapolw.github.io/reveal-md/reveal.html?q=\\<YOUR_URL_HERE>>\n\n===\n\n## Duplicated projects\n\n- Sorry, I have created duplicates at \n  - <https://github.com/patarapolw/reveal-editor>\n  - <https://github.com/patarapolw/reveal-md-server>\n\n===\n\n## Contributions\n\n- Please send suggestions at <https://github.com/patarapolw/reveal-md/issues>\n",VUE_APP_TITLE:"/Users/patarapolw/GitHubProjects/flatsrs/reveal-md/readme-slides.md",VUE_APP_REVEAL_CDN:"/reveal-md/reveal.js/",BASE_URL:"/reveal-md/"}).VUE_APP_PLUGIN,f={},w=[];if(b){var v=t("4fe4").context(Object({NODE_ENV:"production",VUE_APP_PLACEHOLDER:"---\n# Yaml front matter is allowed.\ntitle: reveal-md\ntheme: solarized  # try solarized, serif or white\n---\n// global\n```pug\nstyle.\n  h1, h2, h3, h4, h5, h6 {\n    text-transform: uppercase !important;\n  }\n  \n  p, li {\n    font-size: 2rem;\n  }\n  \n  code {\n    color: red;\n  }\n```\n===\n\n# Reveal-MD\n\nReveal.js x Markdown (Showdown.js) editor and CLI.\n\n--\n\n- Customizable by editing [/src/reveal.ts](/src/reveal.ts), and add your Showdown / HyperPug plugins here. You might use <https://github.com/patarapolw/indented-filter> to create plugins.\n\n--\n\n- Global scripting `<script><\/script>` and styling `<style></style>` is also supported in slides marked with\n\n```markdown\n// global\ncontent (Pug or HTML or extended Markdown)\n```\n\n- The slides marked with `// global` or `// hidden` will be hidden.\n\n--\n\nHTML is also supported\n\n--\n```html\n<small>Small character</small>\n```\n\n===\n\n## Installation\n\n```\ngit init\ngit submodule add https://github.com/patarapolw/reveal-md.git\nnpm i ./reveal-md\n```\n\n--\n\nOr simply (but you won't be able to edit it.)\n\n```\nnpm i https://github.com/patarapolw/reveal-md.git\n```\n\n===\n\n## Usage\n\n```\nreveal-md [options] <filename>\n\nRead file in reveal-md\n\nPositionals:\n  filename  Path to the file to read\n\nOptions:\n  --version     Show version number                                    [boolean]\n  --edit, -e    Edit the file in editor                                [boolean]\n  --media, -m   Path to media folder                                    [string]\n  --plugin, -p  Path to plugin folder                                   [string]\n  --no-media    No media should be loaded                              [boolean]\n  --no-plugin   No plugin should be loaded                             [boolean]\n  --help        Show help                                              [boolean]\n```\n\n===\n\n## Adding media to reveal-md\n\nBy default, media can be put in the folder `media/` alongside the `*.md` file. The media can be referenced using the URL `/media/<FILENAME>`. Can be disabled using `--no-media` flag.\n\n===\n\n## Adding plugins to reveal-md\n\nAlso `plugin/` folder alongside `*.md` file will be loaded. Can be disabled using `--no-plugin` flag. For example, see <https://github.com/patarapolw/flatsrs>\n\n===\n\n## Save as HTML (and associated assets folder)\n\nThis is best done by [downloading complete web page, in associated web browser](https://www.makeuseof.com/tag/save-complete-webpage-offline-reading/).\n\nUsing web crawlers, like <https://github.com/website-scraper/node-website-scraper> won't work, because some JavaScript in Reveal.js is dynamically injected.\n\n===\n\n## Online viewer\n\nYou can do it at <https://patarapolw.github.io/reveal-md/reveal.html?q=\\<YOUR_URL_HERE>>\n\n===\n\n## Duplicated projects\n\n- Sorry, I have created duplicates at \n  - <https://github.com/patarapolw/reveal-editor>\n  - <https://github.com/patarapolw/reveal-md-server>\n\n===\n\n## Contributions\n\n- Please send suggestions at <https://github.com/patarapolw/reveal-md/issues>\n",VUE_APP_TITLE:"/Users/patarapolw/GitHubProjects/flatsrs/reveal-md/readme-slides.md",VUE_APP_REVEAL_CDN:"/reveal-md/reveal.js/",BASE_URL:"/reveal-md/"}).VUE_APP_PLUGIN,!1,/.js$/);try{for(var y=a["e"](v.keys()),E=y.next();!E.done;E=y.next()){var j=E.value;"./pug.js"===j?f=v(j):"./markdown.js"===j?w=v(j):v(j)}}catch(S){m={error:S}}finally{try{E&&!E.done&&(u=y.return)&&u.call(y)}finally{if(m)throw m.error}}}var P=new g({pug:f,markdown:w,cdn:"/reveal-md/reveal.js/"}),k=new URL(location.href).searchParams.get("q");k?fetch(k).then((function(e){return e.text()})).then((function(e){P.update(e)})):P.update("---\n# Yaml front matter is allowed.\ntitle: reveal-md\ntheme: solarized  # try solarized, serif or white\n---\n// global\n```pug\nstyle.\n  h1, h2, h3, h4, h5, h6 {\n    text-transform: uppercase !important;\n  }\n  \n  p, li {\n    font-size: 2rem;\n  }\n  \n  code {\n    color: red;\n  }\n```\n===\n\n# Reveal-MD\n\nReveal.js x Markdown (Showdown.js) editor and CLI.\n\n--\n\n- Customizable by editing [/src/reveal.ts](/src/reveal.ts), and add your Showdown / HyperPug plugins here. You might use <https://github.com/patarapolw/indented-filter> to create plugins.\n\n--\n\n- Global scripting `<script><\/script>` and styling `<style></style>` is also supported in slides marked with\n\n```markdown\n// global\ncontent (Pug or HTML or extended Markdown)\n```\n\n- The slides marked with `// global` or `// hidden` will be hidden.\n\n--\n\nHTML is also supported\n\n--\n```html\n<small>Small character</small>\n```\n\n===\n\n## Installation\n\n```\ngit init\ngit submodule add https://github.com/patarapolw/reveal-md.git\nnpm i ./reveal-md\n```\n\n--\n\nOr simply (but you won't be able to edit it.)\n\n```\nnpm i https://github.com/patarapolw/reveal-md.git\n```\n\n===\n\n## Usage\n\n```\nreveal-md [options] <filename>\n\nRead file in reveal-md\n\nPositionals:\n  filename  Path to the file to read\n\nOptions:\n  --version     Show version number                                    [boolean]\n  --edit, -e    Edit the file in editor                                [boolean]\n  --media, -m   Path to media folder                                    [string]\n  --plugin, -p  Path to plugin folder                                   [string]\n  --no-media    No media should be loaded                              [boolean]\n  --no-plugin   No plugin should be loaded                             [boolean]\n  --help        Show help                                              [boolean]\n```\n\n===\n\n## Adding media to reveal-md\n\nBy default, media can be put in the folder `media/` alongside the `*.md` file. The media can be referenced using the URL `/media/<FILENAME>`. Can be disabled using `--no-media` flag.\n\n===\n\n## Adding plugins to reveal-md\n\nAlso `plugin/` folder alongside `*.md` file will be loaded. Can be disabled using `--no-plugin` flag. For example, see <https://github.com/patarapolw/flatsrs>\n\n===\n\n## Save as HTML (and associated assets folder)\n\nThis is best done by [downloading complete web page, in associated web browser](https://www.makeuseof.com/tag/save-complete-webpage-offline-reading/).\n\nUsing web crawlers, like <https://github.com/website-scraper/node-website-scraper> won't work, because some JavaScript in Reveal.js is dynamically injected.\n\n===\n\n## Online viewer\n\nYou can do it at <https://patarapolw.github.io/reveal-md/reveal.html?q=\\<YOUR_URL_HERE>>\n\n===\n\n## Duplicated projects\n\n- Sorry, I have created duplicates at \n  - <https://github.com/patarapolw/reveal-editor>\n  - <https://github.com/patarapolw/reveal-md-server>\n\n===\n\n## Contributions\n\n- Please send suggestions at <https://github.com/patarapolw/reveal-md/issues>\n")}});
//# sourceMappingURL=reveal.3668c49d.js.map